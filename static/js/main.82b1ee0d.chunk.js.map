{"version":3,"sources":["Components/Buscador.js","Components/imagenes.js","Components/paginacion.js","Components/resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscador","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","current","value","props","datosBusqueda","onSubmit","this","className","ref","type","placeholder","Component","Imagenes","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","Fragment","map","key","id","App","state","pagina","scroll","document","querySelector","scrollIntoView","setState","consultarApi","url","fetch","then","respuesta","json","resultado","hits","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82b1ee0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Buscador extends Component{\r\n\tbusquedaRef = React.createRef();\r\n\r\n\tobtenerDatos = (e) =>{\r\n\t\te.preventDefault();\r\n\t\t//Tomamos el valor del input\r\n\t\tconst termino = this.busquedaRef.current.value;\r\n\t\t// lo enviamos al componente principal\r\n\t\tthis.props.datosBusqueda(termino);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t<form onSubmit={this.obtenerDatos}>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"form-group col-md-8\">\r\n\t\t\t\t\t<input ref={this.busquedaRef} type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Buscar tu imagen Ejemplo: Futbol\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group col-md-4\">\r\n\t\t\t\t\t<input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\" value=\"Buscador\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Buscador;","import React from 'react';\r\n\r\nconst Imagenes = (props) => {\r\n\tconst {largeImageURL, likes, previewURL, tags, views} = props.imagen;\r\n\r\n\treturn (\r\n\t\t<div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<img src={previewURL} alt={tags} className=\"card-img-top\"/>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<p className=\"card-text\">{likes}Me gusta</p>\r\n\t\t\t\t\t<p className=\"card-text\">{views}Vistas</p>\r\n\r\n\t\t\t\t\t<a href={largeImageURL} className=\"btn btn-primary btn-block\">Ver imagen</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Imagenes;","import React from 'react';\r\n\r\nconst Paginacion = props => {\r\n\treturn(\r\n\t\t<div className=\"py-3\">\r\n\t\t\t<button onClick={props.paginaAnterior} type=\"button\" className=\"btn btn-info mr-1\">Anterior &larr;</button>\r\n\t\t\t<button onClick={props.paginaSiguiente} type=\"button\" className=\"btn btn-info\">Siguiente &rarr;</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Paginacion;","import React, { Component } from 'react';\r\nimport Imagenes from './imagenes';\r\nimport Paginacion from './paginacion';\r\n\r\nclass Resultado extends Component {\r\n\tmostrarImagenes = () => {\r\n\t\tconst imagenes = this.props.imagenes;\r\n\r\n\t\tif(imagenes.length === 0){return null;}\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className =\"col-12 p-5 row\">\r\n\t\t\t\t\t{imagenes.map(imagen => (\r\n\t\t\t\t\t\t<Imagenes\r\n\t\t\t\t\t\t\tkey={imagen.id}\r\n\t\t\t\t\t\t\timagen={imagen}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t<Paginacion \r\n            \tpaginaAnterior = {this.props.paginaAnterior}\r\n            \tpaginaSiguiente = {this.props.paginaSiguiente}\r\n\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn ( \r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{this.mostrarImagenes()}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Resultado;","import React, {Component} from 'react';\nimport Buscador from './Components/Buscador';\nimport Resultado from './Components/resultado';\n\nclass App extends Component {\n  state = {\n    termino : 'cafe',\n    imagenes : [],\n    pagina: ''\n  }\n\n  scroll = () =>{\n    const elemento = document.querySelector('.jumbotron');\n    elemento.scrollIntoView('smooth', 'end');\n  }\n\n  paginaAnterior = () =>{\n    //leer state de la pagina actual\n    let pagina = this.state.pagina;\n    // leer si la pagina es 1, ya no ir hacia atras\n    if(pagina === 1 ){ return null};\n    //resta uno a la pagina actual \n    pagina--;\n\n    this.setState({\n      pagina\n    },() => {\n      this.consultarApi();\n      this.scroll();\n    });\n  }\n\n  paginaSiguiente = () =>{\n    //leer state de la pagina actual\n    let pagina = this.state.pagina;\n\n    //sumar un actual \n    pagina++;\n\n    //agregar el cambio al state\n    this.setState({\n      pagina\n    },() => {\n      this.consultarApi();\n      this.scroll();\n    });\n  }\n\n  consultarApi = () => {\n    const termino = this.state.termino;\n    const pagina = this.state.pagina;\n    const url = `https://pixabay.com/api/?key=18540832-42c96ea7a27d1b8e936ae17d6&q=${termino}&per_page=30&page=${pagina}`;\n    \n\n    fetch(url)\n      .then(respuesta => respuesta.json())\n      .then(resultado => this.setState({imagenes : resultado.hits }) )\n  }\n  datosBusqueda = (termino) => {\n    this.setState({\n      termino : termino,\n      pagina : 1\n    }, () => {\n       this.consultarApi();\n    })\n  }\n\n  render() { \n    return (\n      <div className=\"app container\">\n        <div className=\"jumbotron\">\n          <p className=\"lead text-center\">Buscador de imagenes</p>\n          <Buscador \n            datosBusqueda={this.datosBusqueda}\n          />\n        </div>\n        <div className=\"row justify-content-center\">\n          <Resultado\n            imagenes = {this.state.imagenes}\n            paginaAnterior = {this.paginaAnterior}\n            paginaSiguiente = {this.paginaSiguiente}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}